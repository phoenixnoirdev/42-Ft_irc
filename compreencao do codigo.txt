1:Inicialização do Servidor:
	O construtor Server::Server recebe porta e senha, converte e armazena esses valores.
	Cria um canal padrão chamado "default".
		-server.hpp
			std::map<int, Channel> _Chan;
		'e chamado no construtor Server::Server
			this->_Chan.insert(std::make_pair(0, Channel(0, "default")));
	Chama Init() para configurar a socket de escuta e depois Run() para iniciar a execução principal.
	
2:Função Init():

	Cria a socket TCP.
	Configura opções (SO_REUSEADDR).
	Faz o bind na porta e IP.
	Coloca a socket em modo escuta.
	Exibe informações do servidor (porta, IP, senha).

3:Loop Principal (Run()):
	Usa select() para monitorar a socket de escuta e todas as sockets dos clientes.
	Se houver nova conexão, chama AcceptClient() para aceitar e adicionar o novo cliente.
	Para cada cliente, se há dados para ler, chama HandleClientData().
	
4:Função AcceptClient():
	Aceita a conexão.	
	Cria um objeto User para o novo cliente e adiciona ao mapa _User.
	Exibe IP e porta do cliente conectado.

5:Função HandleClientData():
	Lê dados do cliente.
	Se o cliente desconectou, remove do mapa e fecha a socket.
	Concatena dados recebidos ao buffer do usuário.
	Processa comandos IRC:
	DEBUG: alterna o modo de depuração.
	NICK, USER, PASS: salva informações do usuário.
	PRIVMSG: envia mensagem para o canal.
	Quando o usuário envia nick, nome e senha válidos, autentica e adiciona ao canal padrão.
	Envia mensagem de JOIN para os outros membros do canal.

6:Funções auxiliares:
	PassCont: verifica se a senha enviada pelo usuário é igual à do servidor.
	GetPwd, GetNick, GetName: extraem informações das linhas de comando IRC.
	
7:Encerramento:
	Quando o servidor é desligado, chama Shutdown() para fechar todas as sockets, limpar usuários e canais.
	Sobre o modo DEBUG:

Inicialmente, DEBUG é definido como macro em param.hpp, o que impede alteração dinâmica.
O código tenta alternar DEBUG com o comando DEBUG enviado pelo cliente, mas isso só funciona se DEBUG for uma variável global.
Resumo: O servidor aceita conexões, autentica usuários, gerencia canais e mensagens, e pode alternar o modo de depuração se DEBUG for uma variável. O fluxo segue o padrão de servidores IRC simples.
